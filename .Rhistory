hjust = 0,
position = "identity",
family = "Source Sans Pro") +
coord_flip() +
scale_y_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em milhões de R$",
x = NULL,
title = "Média dos saldos financeiros diários - Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(sumario_dados$media * 1.1)) +
tema() + theme(legend.position = "none")
graf_estatico <- ggplot(dados, aes(y = Saldo, x = siglaOrgao)) +
geom_tile(aes(y = round(Saldo,0)), fill = "darkgoldenrod", alpha = 0.1, width = 1, height = 0.01) +
coord_flip() +
geom_hline(yintercept = min(dados$Saldo), linetype = "dotted") +
geom_hline(yintercept = median(dados$Saldo), linetype = "dotted") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = min(dados$Saldo),
label = paste("Mínimo geral: ",
format(round(min(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", x = length(unique(dados$Orgao)) + 1, y = median(dados$Saldo),
label = paste("Mediana geral: ",
format(round(median(dados$Saldo),0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 2, hjust = 0,
family = "Source Sans Pro") +
scale_y_log10(labels = function(x) {format(x, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(y = "Valores em R$ (escala logarítmica)",
x = NULL,
title = "Saldos financeiros diários - Ministério da Ciência e Tecnologia",
subtitle = "Período de janeiro de 2017 a agosto de 2018") +
expand_limits(y = max(dados$Saldo) * 2) +
tema() + theme(legend.position = "none")
graf_estatico
graf_estatico + geom_boxplot()
graf_estatico +
geom_tile(aes(y = ifelse(Date>data_min,minimo,NA)), fill = "firebrick", alpha = 0.4, width = 1, height = 0.03) +
geom_tile(aes(y = ifelse(Date>data_max,maximo,NA)), fill = "navy", alpha = 0.4, width = 1, height = 0.03) +
geom_text(aes(y = ifelse(Date>data_min,minimo * 0.95,NA),
label = paste(format(round(minimo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 1,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "firebrick"
) +
geom_text(aes(y = ifelse(Date>data_max,maximo * 1.05,NA),
label = paste(format(round(maximo/1000000,1), big.mark = ".", decimal.mark=",", scientific = FALSE), "mi")),
hjust = 0,
size = 2.5,
family = "Source Sans Pro",
fontface = "plain",
color = "navy"
) +
labs(subtitle = "Posição em {frame_time}") +
tema() + theme(legend.position = "none") +
transition_time(Date) +
ease_aes('linear')
colnames(dados_fluxo_Siafi) <- c(
"codOrgao",
"nomeOrgao",
"Data",
"Documento",
"docObservacao",
"Item",
"Movimento")
# vamos usar um pipe parecido com o da análise geral, mas antes precisamos de outras informacoes.
# aqui um resumo dos movimentos para podermos mapear os tipos de movimento possíveis.
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = ifelse(str_sub(Documento, 1, 13) == "SALDO INICIAL",
"Saldo de abertura",
str_sub(Documento, 16, 17)),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = format(sum(Movimento),big.mark=".", decimal.mark=","),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=",")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
# criando tabela de classificadores de movimentos financeiros
docsPgtos <- c("DF","DR","GF","GP","GR","OB")
tab_class_movimentos <- data.frame(
"classMovimento" = c("Recebimentos",
"Receitas",
"AnulacoesDespesas",
"AjustesContabeisPos",
"AjustesContabeisNeg",
"Despesas",
"AjustesReceitas",
"Liberacoes",
"SaldoAbertura",
"SaldoAbertura"),
"tipoDoc"        = c("PF",
"RA",
"Docs pagamentos",
"NS",
"NS",
"Docs pagamentos",
"RA",
"PF",
"Saldo de abertura",
"Saldo de abertura"),
"tipoMov"        = c("Positivo",
"Positivo",
"Positivo",
"Positivo",
"Negativo",
"Negativo",
"Negativo",
"Negativo",
"Positivo",
"Negativo"))
# tratando os dados
dados_fluxo <- dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc_ = ifelse(str_sub(Documento, 1, 13) == "SALDO INICIAL",
"Saldo de abertura",
str_sub(Documento, 16, 17)),
tipoDoc  = if_else(tipoDoc_ %in% docsPgtos,
"Docs pagamentos",
tipoDoc_),
tipoMov  = ifelse(Movimento < 0, "Negativo", "Positivo"),
Date     = if_else(str_sub(Data, 1, 4) == "000/",
as.Date(paste0(str_sub(Data, 5, 8),"-01-01")),
dmy(Data))) %>%
left_join(tab_class_movimentos) %>%
group_by(Date, classMovimento) %>%
summarise(Movimento = sum(Movimento)) %>%
ungroup() %>%
select(Date, classMovimento, Movimento) %>%
spread(key = classMovimento, value = Movimento, fill = 0) %>%
complete(Date = seq(min(Date), max(Date), by = "days")) %>% # (1)
replace(is.na(.), 0) %>%
mutate(Movimento      = rowSums(.[-1]), # (2)
Saldo          = cumsum(Movimento),
Saldo_anterior = ifelse(row_number() == 1, Saldo, lag(Saldo)),
data_num = factor(paste0(year(Date),
str_sub(Date, 6, 7),
str_sub(Date, 9, 10))))
# (1) como usar o "fill = list()" aqui? para não ter que usar esse replace depois?
# (2) rowSums(.[-1]) faz a soma de todas as colunas, exceto a primeira.
dados_plot <- dados_fluxo %>% filter(Date <= "2017-04-30")
minimo <- min(dados_plot$Saldo)
media <- mean(dados_plot$Saldo)
ggplot(dados_plot, aes(y = data_num, yend = data_num)) +
geom_point(aes(x = Saldo)) +
geom_segment(aes(x    = Saldo_anterior,
xend = Saldo_anterior +
Recebimentos),
color = "navy",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos,
xend = Saldo_anterior + Recebimentos + Receitas),
color = "navy",
linetype = "dotted",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas),
color = "grey70",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos),
color = "grey70",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg),
color = "grey70",
position = position_nudge(y = -0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas),
color = "firebrick",
position = position_nudge(y = -0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes),
color = "firebrick",
linetype = "dotted",
position = position_nudge(y = -0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes + AjustesReceitas),
color = "grey70", position = position_nudge(y = -0.1)) +
geom_vline(xintercept = minimo, linetype = "dotted") +
geom_vline(xintercept = media, linetype = "dotted") +
annotate(geom = "text", y = length(dados_plot$data_num) + 1, x = minimo,
label = paste("Mínimo para o período: R$",
format(round(minimo,0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 3, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", y = length(dados_plot$data_num) + 1, x = media,
label = paste("Média para o período: R$",
format(round(media,0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 3, hjust = 0,
family = "Source Sans Pro") +
scale_y_discrete(limits = rev(dados_plot$data_num),
labels = function(x) {paste(str_sub(x, 7, 8),
str_sub(x, 5, 6),
str_sub(x, 1, 4), sep = "/")}) +
scale_x_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(x = "Valores em milhões de R$",
y = NULL,
title = "Movimentação diária - MCTI",
subtitle = "Período de janeiro de 2017 a abril de 2017") +
expand_limits(y = length(dados_plot$data_num) + 2) +
tema() + theme(legend.position = "none")
dados_fluxo_Siafi <- read_excel('data/MCTI_limSqDiarioDoc.xlsx')
colnames(dados_fluxo_Siafi) <- c(
"codOrgao",
"nomeOrgao",
"Data",
"Documento",
"docObservacao",
"Item",
"Movimento")
# vamos usar um pipe parecido com o da análise geral, mas antes precisamos de outras informacoes.
# aqui um resumo dos movimentos para podermos mapear os tipos de movimento possíveis.
dados_fluxo_Siafi %>%
mutate(Movimento = as.numeric(as.character(Movimento)),
tipoDoc = ifelse(str_sub(Documento, 1, 13) == "SALDO INICIAL",
"Saldo de abertura",
str_sub(Documento, 16, 17)),
tipoMov = ifelse(Movimento < 0, "Negativo", "Positivo")) %>%
group_by(tipoDoc, tipoMov) %>%
summarise(Total = format(sum(Movimento),big.mark=".", decimal.mark=","),
Quantidade = n()) %>%
kable("html", format.args = list(big.mark=".", decimal.mark=",")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
dados_plot <- dados_fluxo %>% filter(Date <= "2017-04-30")
minimo <- min(dados_plot$Saldo)
media <- mean(dados_plot$Saldo)
ggplot(dados_plot, aes(y = data_num, yend = data_num)) +
geom_point(aes(x = Saldo)) +
geom_segment(aes(x    = Saldo_anterior,
xend = Saldo_anterior +
Recebimentos),
color = "navy",
position = position_nudge(y = 0.1),
arrow = arrow(angle = 30, length = unit(0.05, "inches"), ends = "last", type = "open")) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos,
xend = Saldo_anterior + Recebimentos + Receitas),
color = "navy",
linetype = "dotted",
position = position_nudge(y = 0.1),
arrow = arrow(angle = 30, length = unit(0.05, "inches"), ends = "last", type = "open")) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas),
color = "grey70",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos),
color = "grey70",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg),
color = "grey70",
position = position_nudge(y = -0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas),
color = "firebrick",
position = position_nudge(y = -0.1),
arrow = arrow(angle = 30, length = unit(0.05, "inches"), ends = "last", type = "open")) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes),
color = "firebrick",
linetype = "dotted",
position = position_nudge(y = -0.1),
arrow = arrow(angle = 30, length = unit(0.05, "inches"), ends = "last", type = "open")) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes + AjustesReceitas),
color = "grey70", position = position_nudge(y = -0.1)) +
geom_vline(xintercept = minimo, linetype = "dotted") +
geom_vline(xintercept = media, linetype = "dotted") +
annotate(geom = "text", y = length(dados_plot$data_num) + 1, x = minimo,
label = paste("Mínimo para o período: R$",
format(round(minimo,0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 3, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", y = length(dados_plot$data_num) + 1, x = media,
label = paste("Média para o período: R$",
format(round(media,0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 3, hjust = 0,
family = "Source Sans Pro") +
scale_y_discrete(limits = rev(dados_plot$data_num),
labels = function(x) {paste(str_sub(x, 7, 8),
str_sub(x, 5, 6),
str_sub(x, 1, 4), sep = "/")}) +
scale_x_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(x = "Valores em milhões de R$",
y = NULL,
title = "Movimentação diária - MCTI",
subtitle = "Período de janeiro de 2017 a abril de 2017") +
expand_limits(y = length(dados_plot$data_num) + 2) +
tema() + theme(legend.position = "none")
View(dados_plot)
dados_plot <- dados_fluxo %>% filter(Date <= "2017-04-30")
minimo <- min(dados_plot$Saldo)
media <- mean(dados_plot$Saldo)
ggplot(dados_plot, aes(y = data_num, yend = data_num)) +
geom_point(aes(x = Saldo)) +
geom_segment(aes(x    = Saldo_anterior,
xend = Saldo_anterior +
Recebimentos),
color = "navy",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos,
xend = Saldo_anterior + Recebimentos + Receitas),
color = "navy",
linetype = "dotted",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas),
color = "grey70",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos),
color = "grey70",
position = position_nudge(y = 0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg),
color = "grey70",
position = position_nudge(y = -0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas),
color = "firebrick",
position = position_nudge(y = -0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes),
color = "firebrick",
linetype = "dotted",
position = position_nudge(y = -0.1)) +
geom_segment(aes(x    = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes,
xend = Saldo_anterior + Recebimentos + Receitas + AnulacoesDespesas + AjustesContabeisPos + AjustesContabeisNeg + Despesas + Liberacoes + AjustesReceitas),
color = "grey70", position = position_nudge(y = -0.1)) +
geom_vline(xintercept = minimo, linetype = "dotted") +
geom_vline(xintercept = media, linetype = "dotted") +
annotate(geom = "text", y = length(dados_plot$data_num) + 1, x = minimo,
label = paste("Mínimo para o período: R$",
format(round(minimo,0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 3, hjust = 0,
family = "Source Sans Pro") +
annotate(geom = "text", y = length(dados_plot$data_num) + 1, x = media,
label = paste("Média para o período: R$",
format(round(media,0),
big.mark = ".", decimal.mark = ",")),
color = "grey50", size = 3, hjust = 0,
family = "Source Sans Pro") +
scale_y_discrete(limits = rev(dados_plot$data_num),
labels = function(x) {paste(str_sub(x, 7, 8),
str_sub(x, 5, 6),
str_sub(x, 1, 4), sep = "/")}) +
scale_x_continuous(labels = function(x) {format(x/1000000, big.mark = ".", decimal.mark=",", scientific = FALSE)}) +
labs(x = "Valores em milhões de R$",
y = NULL,
title = "Saldos (pontos) e Movimentações diárias (linhas) - MCTI",
subtitle = "Período de janeiro de 2017 a abril de 2017") +
expand_limits(y = length(dados_plot$data_num) + 2) +
tema() + theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(readxl)
dados_brutos <- read_xls(despesasBrasil2008a2017.xlsx, skip = 9)
dados_brutos <- read_xls("despesasBrasil2008a2017.xlsx", skip = 9)
dados_brutos <- read_xls("despesasBrasil2008a2017.xlsx", skip = 9)
setwd("~/GitHub/curso-ggplot2")
dados_brutos <- read_xls("despesasBrasil2008a2017.xlsx", skip = 9)
dados_brutos <- read_xlsx("despesasBrasil2008a2017.xlsx", skip = 9)
dados_brutos
library(ipeaData)
install.packages("ipeaData")
library(ipeaData)
pibs <- ipeadata("BM12_PIBAC12")
pibs <- pibs[MES=="12" & ANO %in% (2008:2017)]$VALVALOR
names(pibs) <- as.character(c(2008:2017))
dados <- dados_brutos
colnames(dados)<- c("Categoria", names(pibs))
for (i in 2:length(dados)) {
dados[,i] <- dados[,i] / (pibs[colnames(dados[,i])]*1000000)
}
dados
dados <- dados %>%
mutate(inicial = `2008`,
final = `2017`) %>%
gather(key = "Ano", value = "Valor", `2008`:`2017`) %>%
filter(!(Categoria %in% c("Amortização da Dívida", "Juros"))) %>%
mutate(Categoria = factor(Categoria),
Categoria = fct_reorder(Categoria, Valor),
Ano = as.integer(Ano))
dados
dados_brutos <- dados_brutos
colnames(dados_brutos)<- c("Categoria", names(pibs))
for (i in 2:length(dados_brutos)) {
dados_brutos[,i] <- dados_brutos[,i] / (pibs[colnames(dados_brutos[,i])]*1000000)
}
dados_brutos
dados <-
dados_brutos %>%
gather(key = "Ano", value = "Valor", `2008`:`2017`) %>%
filter(!(Categoria %in% c("Amortização da Dívida", "Juros"))) %>%
mutate(Categoria = factor(Categoria),
Categoria = fct_reorder(Categoria, Valor),
Ano = as.integer(Ano))
dados
ggplot(dados)
ggplot(dados, aes(x = Ano, y = Valor))
ggplot(dados, aes(x = Ano, y = Valor))
ggplot(dados, aes(x = Ano, y = Valor)) +
geom_point()
ggplot(dados, aes(x = Ano, y = Valor)) +
geom_point() +
geom_line()
ggplot(dados, aes(x = Ano, y = Valor, color = Categoria)) +
geom_point() +
ggplot(dados, aes(x = Ano, y = Valor, color = Categoria)) +
geom_point()
ggplot(dados, aes(x = Ano, y = Categoria, color = Valor)) +
geom_point()
ggplot(dados, aes(x = Ano, y = Valor, color = Categoria)) +
geom_point()
ggplot(dados, aes(x = Ano, y = Categoria, color = Valor)) +
geom_point()
ggplot(dados, aes(x = Ano, y = Categoria, size = Valor)) +
geom_point()
ggplot(dados, aes(x = Ano, y = Valor, color = Categoria, size = Valor)) +
geom_point()
ggplot(dados, aes(x = Ano, y = Valor, color = Categoria)) +
geom_point() +
geom_line()
ggplot(dados, aes(x = Ano, y = Valor)) +
geom_point() +
geom_line()
ggplot(dados, aes(x = Ano, y = Valor, group = Categoria)) +
geom_point() +
geom_line()
ggplot(dados, aes(x = Ano, y = Valor, group = Categoria, color = Categoria)) +
geom_point() +
geom_line()
ggplot(dados %>% filter(Ano == 2017), aes(x = Ano, y = Valor, group = Categoria, color = Categoria)) +
geom_point() +
geom_line()
ggplot(dados %>% filter(Ano == 2017), aes(x = Ano, y = Valor, color = Categoria)) +
geom_point() +
geom_line()
ggplot(dados %>% filter(Ano == 2017), aes(x = Ano, y = Valor, color = Categoria)) +
geom_point()
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria)) +
geom_point()
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria)) +
geom_point() +
geom_bar()
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria)) +
geom_point() +
geom_col()
ggplot(dados %>% filter(Ano == 2017), aes(y = Categoria, x = Valor, color = Categoria)) +
geom_point() +
geom_col()
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria)) +
geom_point() +
geom_col() +
coord_flip()
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_point() +
geom_col() +
coord_flip()
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_point() +
geom_col() +
coord_flip() +
scale_color_discrete(guides = FALSE)
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_point() +
geom_col() +
coord_flip() +
scale_color_manual(guides = FALSE)
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_point() +
geom_col() +
coord_flip() +
scale_color_continuous(guides = FALSE)
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_point() +
geom_col() +
coord_flip() +
theme(legend.position = none)
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_point() +
geom_col() +
coord_flip() +
theme(legend.position = 'none')
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_point() +
coord_flip() +
theme(legend.position = 'none')
ggplot(dados %>% filter(Ano == 2017), aes(x = Categoria, y = Valor, color = Categoria, fill = Categoria)) +
geom_col() +
coord_flip() +
theme(legend.position = 'none')
ggplot(dados %>% filter(Ano == 2017), aes(x = reorder(Categoria, Valor), y = Valor, color = Categoria, fill = Categoria)) +
geom_col() +
coord_flip() +
theme(legend.position = 'none')
knitr::opts_chunk$set(echo = TRUE, messages = FALSE, warning = FALSE)
library(ipeaData)
pibs <- ipeadata("BM12_PIBAC12")
pibs <- pibs[MES=="12" & ANO %in% (2008:2017)]$VALVALOR
names(pibs) <- as.character(c(2008:2017))
